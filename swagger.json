{
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Movie API.",
    "version": "0.0.1"
  },
  "host": "localhost:12345",
  "paths": {
    "/movie": {
      "post": {
        "description": "Adds new movie to the database",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "operationId": "CreateMovie",
        "parameters": [
          {
            "description": "The movie to be created.",
            "name": "movie",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie succesfully created."
          }
        }
      }
    },
    "/movie/{name}": {
      "get": {
        "description": "Returns the movie from the database which user has requested",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "operationId": "GetMovie",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "movie response",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "default": {
            "description": "unexpected error"
          }
        }
      },
      "put": {
        "description": "Updates a movie from the database",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "operationId": "UpdateMovie",
        "parameters": [
          {
            "type": "string",
            "description": "The movie to be updated.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "movie",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie succesfully created."
          }
        }
      },
      "delete": {
        "description": "Delete a movie from the database",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "operationId": "DeleteMovie",
        "parameters": [
          {
            "type": "string",
            "description": "The movie to be deleted.",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Movie succesfully deleted."
          }
        }
      },
      "patch": {
        "description": "Updates a movie from the database with patch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "operationId": "UpdateMovie",
        "parameters": [
          {
            "type": "string",
            "description": "The movie to be updated with patch.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "movie",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie succesfully created."
          }
        }
      }
    },
    "/movies": {
      "get": {
        "description": "Returns all the movies from the database",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "operationId": "GetMovies",
        "responses": {
          "200": {
            "description": "movie response",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "default": {
            "description": "unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "Movie": {
      "description": "Movie this movie model",
      "type": "object",
      "required": [
        "budget",
        "director"
      ],
      "properties": {
        "budget": {
          "description": "the budget for this user",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Budget"
        },
        "director": {
          "description": "the director for this user",
          "type": "string",
          "x-go-name": "Director"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "RestSwagger/model"
    }
  },
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}